{"version":3,"sources":["components/img/BudgetTracker.jpg","components/img/Lyngua.jpg","components/img/me.png","components/img/logo.png","components/Header.js","components/MainCol.js","components/ProfileCol.js","components/Body.js","components/Footer.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Row","Col","Jumbotron","className","delay","MainCol","md","xs","Card","CardHeader","CardBody","src","BudgetTracker","id","alt","CardText","href","Lyngua","ProfileCol","me","Body","Footer","Navbar","Nav","NavbarBrand","logo","NavItem","NavLink","App","Container","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.34f52d05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BudgetTracker.8c91d1c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lyngua.f09d5427.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me.67989073.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d8d2ff08.png\";","import React from \"react\";\r\nimport { Jumbotron, Row, Col} from \"reactstrap\";\r\nimport FadeIn from \"react-fade-in\";\r\nconst Header = () => {\r\n  return (\r\n    \r\n      <Row>\r\n        <Col>\r\n          <Jumbotron className=\"jumbotron\">\r\n            <FadeIn delay=\"500\">\r\n              <span>An Inquisitive Problem Solver</span>\r\n              <br />\r\n              <span>With a Love of Learning,</span>\r\n              <br />\r\n              <span>And Passion for Technology.</span>\r\n              <br />\r\n              <span>&hearts; Lifelong Nerd &hearts; </span>\r\n            </FadeIn>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {Col, Card, CardHeader,CardBody, CardText} from \"reactstrap\";\r\nimport BudgetTracker from \"./img/BudgetTracker.jpg\";\r\nimport Lyngua from \"./img/Lyngua.jpg\";\r\nconst MainCol = () => {\r\n  return (\r\n  <Col md={8} xs={12}>\r\n    <Card>\r\n      <CardHeader>\r\n        Budget Tracker\r\n      </CardHeader>\r\n      <CardBody>\r\n        <img src={BudgetTracker} id=\"budgettracker\" alt=\"budget tracker app\"/>\r\n      </CardBody>\r\n      <CardText>\r\n        <span>Summary: A budget-tracking progressive web application </span>\r\n        <span>Technologies Used: </span>\r\n        <ul>\r\n          <li>NodeJS</li>\r\n          <li>ExpressJS</li>\r\n          <li>MongoDB</li>\r\n          <li>IndexedDB</li>\r\n        </ul>\r\n        <a href=\"https://github.com/akarpisz/budget-trackerPWA\">Github</a>\r\n        <br/>\r\n        \r\n        \r\n      </CardText>\r\n    </Card>\r\n    <br/>\r\n    <Card>\r\n      <CardHeader>\r\n        Lyngua\r\n      </CardHeader>\r\n      <CardBody>\r\n        <img src={Lyngua} id=\"lyngua\" alt=\"lyngua\"/>\r\n      </CardBody>\r\n      <CardText>\r\n        <span>Summary: An MERN-Stack Application allowing users to translate text, save translations, and share translations with other users </span>\r\n        <span></span>\r\n        <span>Technologies Used: </span>\r\n        <ul>\r\n          <li>NodeJS</li>\r\n          <li>ReactJS</li>\r\n          <li>ExpressJS</li>\r\n          <li>MongoDB/Mongoose</li>\r\n          <li>Azure Translator API</li>\r\n          <li>Reactstrap, React-Icons</li>\r\n  \r\n        </ul>\r\n        <a href=\"https://github.com/akarpisz/lyngua\">Github</a>\r\n        <br/>\r\n        <a href=\"https://lyngua.herokuapp.com\">Heroku</a>\r\n        \r\n      </CardText>\r\n    </Card>\r\n    <br/>\r\n    <Card>\r\n      <CardHeader>\r\n        oTravelTo\r\n      </CardHeader>\r\n      <CardBody>\r\n        {/* <img src={null} alt=\"nothing yet\"/> */}\r\n      </CardBody>\r\n      <CardText>\r\n        <span>Summary: An application for travelers to share where they've been, and share where they're going next</span>\r\n        <span>Technologies Used: </span>\r\n        <ul>\r\n          <li>NodeJS</li>\r\n          <li>ExpressJS</li>\r\n          <li>MySQL/Sequelize</li>\r\n          <li>Handlebars</li>\r\n          <li>JQuery</li>\r\n        </ul>\r\n        <a href=\"https://github.com/NekoCarreraDesigns/project-2\">Github</a>\r\n        <br/>\r\n        {/* <a href=\"https://project-2c.herokuapp.com/\">Heroku</a> */}\r\n        \r\n        \r\n        \r\n      </CardText>\r\n    </Card>\r\n  </Col>\r\n  )\r\n};\r\nexport default MainCol;\r\n","import React from \"react\";\r\nimport { Col, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport me from \"./img/me.png\";\r\nconst ProfileCol = () => {\r\n  return (\r\n    <Col md={4} xs={12}>\r\n      <Card>\r\n        <CardHeader className=\"text-center\">\r\n          <h3>Andrew Karpisz</h3>\r\n          <h3>Full-Stack Web Developer</h3>\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <img src={me} id=\"portrait\" alt=\"andrew karpisz\" />\r\n        </CardBody>\r\n        <div>\r\n          Proficient In:\r\n          <ul>\r\n            <li>Javascript and NodeJS</li>\r\n            <li>ReactJS</li>\r\n            <li>MongoDB</li>\r\n            <li>MySQL</li>\r\n            <li>ExpressJS</li>\r\n            <li>REST APIs</li>\r\n            <li>HTML, CSS and CSS Frameworks</li>\r\n          </ul>\r\n          <span>Next Step(s):</span>\r\n          <ul>\r\n            <li>Bachelors in Computer Science</li>\r\n            then...\r\n            <li>Masters in Computer Science</li>\r\n          </ul>\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\nexport default ProfileCol;\r\n","import React from 'react';\r\nimport {Row} from 'reactstrap';\r\nimport MainCol from \"./MainCol\";\r\nimport ProfileCol from \"./ProfileCol\";\r\nconst Body = () =>{\r\n    return(\r\n        <>\r\n        <Row>\r\n            <ProfileCol/>\r\n            <MainCol/>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\n\r\nconst Footer = () => {\r\nreturn (\r\n    <>\r\n    <footer>\r\n      <br/><br/>\r\n        &copy;2020 Andrew A.K. &#128516; &#128151;\r\n    </footer>\r\n    </>\r\n)\r\n}\r\nexport default Footer;","import React from \"react\";\r\nimport { Nav, NavItem, NavLink, NavbarBrand } from \"reactstrap\";\r\nimport logo from \"./img/logo.png\";\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav id=\"navbar\">\r\n        <NavbarBrand>\r\n          <img src={logo} alt=\"logo\" id=\"logo\" />| Andrew A.K.\r\n        </NavbarBrand>\r\n        <NavItem>\r\n          <NavLink href=\"https://github.com/akarpisz\">| Github</NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"https://www.linkedin.com/in/the-andrew-ak\">\r\n            | LinkedIn\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <hr />\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport {Container} from 'reactstrap';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n      <Navbar/>\n      <Header/>\n      <Body/>\n      <Footer/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}